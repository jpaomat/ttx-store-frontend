name: Deploy Techtronix App
on:
  push:
    branches: [main, feature/*]
env:
  ### VARIABLES GENERALES ###
  project_name: 'ttx-store-frontend'
  team: 'ttx'
  cache_path: node_modules
  language: 'javascript'
  region: 'us-east-1'
  build_folder: build
  bucket_name: techtronix-store.com
  cloudfront_id: 123A

jobs:
  install-dev-dependencies:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Restore cache
        uses: actions/cache@v2
        env:
          cache-name: nodejs-github-actions
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-main
          restore-keys: npm-${{ env.cache-name }}
      - name: Install Dependencies
        run: |
          npm install

  linter:
    runs-on: ubuntu-20.04
    needs: install-dev-dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        env:
          cache-name: nodejs-github-actions
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-main
          restore-keys: npm-${{ env.cache-name }}
      - name: Running Linter
        run: npm run lint

  test-coverage:
    runs-on: ubuntu-20.04
    needs: install-dev-dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        env:
          cache-name: nodejs-github-actions
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-main
          restore-keys: npm-${{ env.cache-name }}
      - name: Running Test
        run: |
          npm run test
      - name: Persist Data
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage

  deploy-front:
    runs-on: ubuntu-20.04
    # if: github.ref == 'refs/heads/qa'
    needs: [linter, test-coverage]
    steps:
      - uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        env:
          cache-name: nodejs-github-actions
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-dev
          restore-keys: npm-${{ env.cache-name }}
      - uses: actions/setup-node@v2
        with:
          node-version: '12.x'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.region }}

      - name: Install dependecies
        run: npm install
      - name: Build Static Website
        run: npm run build
      - name: Copy files to the production website with the AWS CLI
        run: |
          aws s3 sync --delete ${{ env.build_folder }} s3://${{ secrets.BUCKET_NAME}}
          
      # - name: Invalidate cache cloudfront
      #   run: |
      #     aws cloudfront create-invalidation \
      #       --distribution-id ${{ env.cloudfront_id }} \
      #       --paths "/*"
